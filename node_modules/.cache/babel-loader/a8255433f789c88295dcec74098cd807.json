{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    counter: 0\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === \"increment\") return {\n    counter: state.counter + 1\n  };else if (action.type === \"decrement\") return {\n    counter: state.counter - 1\n  };\n  return state;\n};\nconst store = configureStore({\n  reducer: counterReducer\n});\nexport default store;","map":{"version":3,"names":["configureStore","counterReducer","state","counter","action","type","store","reducer"],"sources":["/home/luigi/Documents/React-Practice/ReduxDemo/src/store/index.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\n \nconst counterReducer = (state = { counter: 0 }, action) => {\n    if (action.type === \"increment\")\n        return {\n            counter: state.counter + 1,\n        };\n    else if (action.type === \"decrement\")\n        return {\n            counter: state.counter - 1,\n        };\n \n    return state;\n};\n \nconst store = configureStore({ reducer: counterReducer });\n \nexport default store;"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AAEjD,MAAMC,cAAc,GAAG,YAAoC;EAAA,IAAnCC,KAAK,uEAAG;IAAEC,OAAO,EAAE;EAAE,CAAC;EAAA,IAAEC,MAAM;EAClD,IAAIA,MAAM,CAACC,IAAI,KAAK,WAAW,EAC3B,OAAO;IACHF,OAAO,EAAED,KAAK,CAACC,OAAO,GAAG;EAC7B,CAAC,CAAC,KACD,IAAIC,MAAM,CAACC,IAAI,KAAK,WAAW,EAChC,OAAO;IACHF,OAAO,EAAED,KAAK,CAACC,OAAO,GAAG;EAC7B,CAAC;EAEL,OAAOD,KAAK;AAChB,CAAC;AAED,MAAMI,KAAK,GAAGN,cAAc,CAAC;EAAEO,OAAO,EAAEN;AAAe,CAAC,CAAC;AAEzD,eAAeK,KAAK"},"metadata":{},"sourceType":"module"}